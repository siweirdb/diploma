services:
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    env_file:
      - .env

  db:
    image: postgres:17
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: foundly
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s
    env_file:
      - .env

  migration:
    build:
      context: ./foundly
      dockerfile: Dockerfile
    container_name: django_migration
    command: >
      sh -c "python manage.py migrate --noinput"
    volumes:
      - ./foundly:/foundly
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_NAME: foundly
      DB_USER: postgres
      DB_PASSWORD: 12345
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    restart: "no"
    env_file:
      - .env

  django:
    build:
      context: ./foundly
      dockerfile: Dockerfile
    container_name: django_app
    restart: always
    volumes:
      - ./foundly:/foundly
      - ./media:/foundly/media
    ports:
      - "8000:8000"
    depends_on:
      migration:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    environment:
      DB_NAME: foundly
      DB_USER: postgres
      DB_PASSWORD: 12345
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    env_file:
      - .env
    command: >
      sh -c "python manage.py migrate --noinput && python manage.py loaddata --exclude auth.permission --exclude contenttypes initial_data.json && daphne -b 0.0.0.0 -p 8000 foundly.asgi:application"
#      sh -c "python manage.py migrate --noinput && python manage.py loaddata --exclude auth.permission --exclude contenttypes initial_data.json && python manage.py runserver"
#      sh -c "python manage.py migrate --noinput && daphne -b 0.0.0.0 -p 8000 foundly.asgi:application"

  celery:
    build:
      context: ./foundly
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A foundly worker --loglevel=info
    volumes:
      - ./foundly:/foundly
      - ./media:/foundly/media
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      DB_NAME: foundly
      DB_USER: postgres
      DB_PASSWORD: 12345
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    env_file:
      - .env

  celery-beat:
    build:
      context: ./foundly
      dockerfile: Dockerfile
    container_name: celery_beat
    command: celery -A foundly beat --loglevel=info
    volumes:
      - ./foundly:/foundly
      - ./media:/foundly/media
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      DB_NAME: foundly
      DB_USER: postgres
      DB_PASSWORD: 12345
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    env_file:
      - .env

volumes:
  pg_data:
  redis_data: